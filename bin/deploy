#!/usr/bin/env ruby

require 'json'
require 'pp'
require 'slop'

def version
  @version ||= begin
    data = JSON.parse(File.read('./package.json'))
    data['version']
  end
end

opts = Slop.parse do |o|
  o.bool    '-u', '--update', 'indicates that you are updating a version, requires invalidation'
  o.bool    '-l', '--latest', 'indicates that you are updating the edge/latest version'
  o.on      '-v', '--version', 'prints current version of the SDK (for sanity check)' do
    puts "Current version is #{version}"
    exit
  end
end

def execute(cmd)
  puts "\n***************************************************************************"
  puts "$ #{cmd}"
  system(cmd)
end

# Notes:
#
# To update a version
#   1. Update package.json
#   2. Update index.js - yeah, we copy it for now
#   3. Deploy
#
# We always build to the version folder under tools:
#   cdn.translationexchange.com/tools/tml/${version}/tml.js
#   cdn.translationexchange.com/tools/tml/${version}/tml.min.js
#
# Optionally, if you say so, we will build under latest:
#   cdn.translationexchange.com/tools/tml/latest/tml.js
#   cdn.translationexchange.com/tools/tml/latest/tml.min.js
#
# If you must make changes to older versions:
#   1. branch it from that version:  git checkout -b 0.1.0 0.1.0
#   2. make changes you want and cherry pick them back to develop (or the other way around)
#   3. run deploy script from the branch - it will update the appropriate version

# Let's first tag the version in github, unless you are updating an existing version
if !opts[:update]
  puts "Tagging current version as #{version}"
  execute("git tag #{version}")
  execute("git push")
end

puts "Deploying current dist/tml-#{version}.js as tools/tml/#{version}/tml.js ...\n\n"

execute('(grunt build)')
execute("aws s3 cp dist/tml-#{version}.js s3://trex-snapshots/tools/tml/#{version}/tml.js")
execute("aws s3 cp dist/tml-#{version}.min.js s3://trex-snapshots/tools/tml/#{version}/tml.min.js")

# if you are updating a version that is already there, tell us so
if opts[:update]
  execute("bin/invalidate tools/tml/#{version}/tml.js tools/tml/#{version}/tml.min.js")
end

# only if you say so, update the latest
if opts[:latest]
  execute("aws s3 cp dist/tml-#{version}.js s3://trex-snapshots/tools/tml/latest/tml.js")
  execute("aws s3 cp dist/tml-#{version}.min.js s3://trex-snapshots/tools/tml/latest/tml.min.js")
  execute("bin/invalidate tools/tml/latest/tml.js tools/tml/latest/tml.min.js")
end

puts "\n\nCongratulations, the tml v#{version} has been deployed...\n\n"
